; ModuleID = 'main'
source_filename = "main"
target datalayout = "e-m:w-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-pc-windows-msvc-coff"

%Unity.Jobs.LowLevel.Unsafe.JobRanges = type { i32, i32, i32, i32, i8*, i8* }
%AudioAnalysis.Levels123.SterioToLMRSumJob = type { %"Unity.Collections.NativeArray`1<System.Single>", %"Unity.Collections.NativeArray`1<System.Single>", %"Unity.Collections.NativeArray`1<System.Single>", %"Unity.Collections.NativeArray`1<System.Single>" }
%"Unity.Collections.NativeArray`1<System.Single>" = type { i8*, i32, i32, i32, %Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle, i8*, i32, [4 x i8] }
%Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle = type { i8*, i32, i32 }

@"Unity.Jobs.LowLevel.Unsafe.JobsUtility::GetWorkStealingRange_Ptr" = external local_unnamed_addr global i8 (%Unity.Jobs.LowLevel.Unsafe.JobRanges*, i32, i32*, i32*)*
@burst.string.bc77e56f72475bcb1ba0b4d16fff9cb4 = external global [61 x i8], align 1

define dllexport void @a6db73817a59ce26c718c957cb7b9869(%AudioAnalysis.Levels123.SterioToLMRSumJob* nocapture nonnull readonly dereferenceable(224) %jobData, i8* nocapture readnone %additionalPtr, i8* nocapture readnone %bufferRangePatchData, %Unity.Jobs.LowLevel.Unsafe.JobRanges* nonnull dereferenceable(32) %ranges, i32 %jobIndex) local_unnamed_addr !ubaa. !3 {
entry:
  %var.1 = alloca i32, align 4
  %var.0 = alloca i32, align 4
  store i32 0, i32* %var.0, align 4
  store i32 0, i32* %var.1, align 4
  %0 = load i8 (%Unity.Jobs.LowLevel.Unsafe.JobRanges*, i32, i32*, i32*)*, i8 (%Unity.Jobs.LowLevel.Unsafe.JobRanges*, i32, i32*, i32*)** @"Unity.Jobs.LowLevel.Unsafe.JobsUtility::GetWorkStealingRange_Ptr", align 8, !invariant.load !2
  %1 = call i8 %0(%Unity.Jobs.LowLevel.Unsafe.JobRanges* nonnull dereferenceable(32) %ranges, i32 %jobIndex, i32* nonnull dereferenceable(4) %var.0, i32* nonnull dereferenceable(4) %var.1)
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %BL.0057, label %BL.0019.lr.ph

BL.0019.lr.ph:                                    ; preds = %entry
  %3 = bitcast %AudioAnalysis.Levels123.SterioToLMRSumJob* %jobData to float**
  %4 = getelementptr %AudioAnalysis.Levels123.SterioToLMRSumJob, %AudioAnalysis.Levels123.SterioToLMRSumJob* %jobData, i64 0, i32 1
  %5 = bitcast %"Unity.Collections.NativeArray`1<System.Single>"* %4 to float**
  %6 = getelementptr %AudioAnalysis.Levels123.SterioToLMRSumJob, %AudioAnalysis.Levels123.SterioToLMRSumJob* %jobData, i64 0, i32 3
  %7 = bitcast %"Unity.Collections.NativeArray`1<System.Single>"* %6 to float**
  %8 = getelementptr %AudioAnalysis.Levels123.SterioToLMRSumJob, %AudioAnalysis.Levels123.SterioToLMRSumJob* %jobData, i64 0, i32 2
  %9 = bitcast %"Unity.Collections.NativeArray`1<System.Single>"* %8 to float**
  br label %BL.0019

BL.0052.loopexit.loopexit:                        ; preds = %BL.0031
  br label %BL.0052.loopexit

BL.0052.loopexit:                                 ; preds = %BL.0052.loopexit.loopexit, %middle.block, %BL.0019
  %10 = call i8 %0(%Unity.Jobs.LowLevel.Unsafe.JobRanges* nonnull dereferenceable(32) %ranges, i32 %jobIndex, i32* nonnull dereferenceable(4) %var.0, i32* nonnull dereferenceable(4) %var.1)
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %BL.0057.loopexit, label %BL.0019

BL.0019:                                          ; preds = %BL.0019.lr.ph, %BL.0052.loopexit
  %12 = load i32, i32* %var.1, align 4
  %13 = load i32, i32* %var.0, align 4
  %14 = icmp slt i32 %13, %12
  br i1 %14, label %BL.0031.lr.ph, label %BL.0052.loopexit

BL.0031.lr.ph:                                    ; preds = %BL.0019
  %15 = load float*, float** %3, align 1, !alias.scope !4
  %16 = load float*, float** %5, align 1, !alias.scope !4
  %17 = load float*, float** %7, align 1, !alias.scope !4
  %18 = load float*, float** %9, align 1, !alias.scope !4
  %19 = sext i32 %13 to i64
  %wide.trip.count = sext i32 %12 to i64
  %20 = sub nsw i64 %wide.trip.count, %19
  %min.iters.check = icmp ult i64 %20, 4
  br i1 %min.iters.check, label %BL.0031.preheader, label %vector.scevcheck

vector.scevcheck:                                 ; preds = %BL.0031.lr.ph
  %21 = xor i64 %19, -1
  %22 = add nsw i64 %21, %wide.trip.count
  %23 = shl i32 %13, 1
  %24 = trunc i64 %22 to i32
  %mul = call { i32, i1 } @llvm.umul.with.overflow.i32(i32 %24, i32 2)
  %mul.result = extractvalue { i32, i1 } %mul, 0
  %mul.overflow = extractvalue { i32, i1 } %mul, 1
  %25 = add i32 %23, %mul.result
  %26 = icmp slt i32 %25, %23
  %27 = icmp ugt i64 %22, 4294967295
  %28 = or i32 %23, 1
  %29 = add i32 %28, %mul.result
  %30 = icmp slt i32 %29, %28
  %31 = or i1 %30, %27
  %32 = or i1 %31, %mul.overflow
  %33 = or i1 %26, %32
  br i1 %33, label %BL.0031.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.scevcheck
  %n.vec = and i64 %20, -4
  %ind.end = add nsw i64 %n.vec, %19
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %offset.idx = add i64 %index, %19
  call void @llvm.experimental.noalias.scope.decl(metadata !4)
  %34 = trunc i64 %index to i32
  %35 = add i32 %13, %34
  %36 = shl i32 %35, 1
  %37 = sext i32 %36 to i64
  %38 = getelementptr float, float* %15, i64 %37
  %39 = bitcast float* %38 to <8 x float>*
  %wide.vec = load <8 x float>, <8 x float>* %39, align 1, !noalias !4
  %strided.vec = shufflevector <8 x float> %wide.vec, <8 x float> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %strided.vec9 = shufflevector <8 x float> %wide.vec, <8 x float> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %40 = fadd <4 x float> %strided.vec, %strided.vec9
  %41 = getelementptr float, float* %16, i64 %offset.idx
  %42 = bitcast float* %41 to <4 x float>*
  store <4 x float> %strided.vec, <4 x float>* %42, align 1, !noalias !4
  %43 = getelementptr float, float* %17, i64 %offset.idx
  %44 = bitcast float* %43 to <4 x float>*
  store <4 x float> %strided.vec9, <4 x float>* %44, align 1, !noalias !4
  %45 = getelementptr float, float* %18, i64 %offset.idx
  %46 = bitcast float* %45 to <4 x float>*
  store <4 x float> %40, <4 x float>* %46, align 1, !noalias !4
  %index.next = add i64 %index, 4
  %47 = icmp eq i64 %index.next, %n.vec
  br i1 %47, label %middle.block, label %vector.body, !llvm.loop !7

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %20, %n.vec
  br i1 %cmp.n, label %BL.0052.loopexit, label %BL.0031.preheader

BL.0031.preheader:                                ; preds = %vector.scevcheck, %BL.0031.lr.ph, %middle.block
  %indvars.iv.ph = phi i64 [ %19, %vector.scevcheck ], [ %19, %BL.0031.lr.ph ], [ %ind.end, %middle.block ]
  br label %BL.0031

BL.0057.loopexit:                                 ; preds = %BL.0052.loopexit
  br label %BL.0057

BL.0057:                                          ; preds = %BL.0057.loopexit, %entry
  ret void

BL.0031:                                          ; preds = %BL.0031.preheader, %BL.0031
  %indvars.iv = phi i64 [ %indvars.iv.next, %BL.0031 ], [ %indvars.iv.ph, %BL.0031.preheader ]
  call void @llvm.experimental.noalias.scope.decl(metadata !4)
  %48 = trunc i64 %indvars.iv to i32
  %49 = shl i32 %48, 1
  %50 = sext i32 %49 to i64
  %51 = getelementptr float, float* %15, i64 %50
  %52 = load float, float* %51, align 1, !noalias !4
  %53 = or i32 %49, 1
  %54 = sext i32 %53 to i64
  %55 = getelementptr float, float* %15, i64 %54
  %56 = load float, float* %55, align 1, !noalias !4
  %57 = fadd float %52, %56
  %58 = getelementptr float, float* %16, i64 %indvars.iv
  store float %52, float* %58, align 1, !noalias !4
  %59 = getelementptr float, float* %17, i64 %indvars.iv
  store float %56, float* %59, align 1, !noalias !4
  %60 = getelementptr float, float* %18, i64 %indvars.iv
  store float %57, float* %60, align 1, !noalias !4
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %BL.0052.loopexit.loopexit, label %BL.0031, !llvm.loop !9
}

define dllexport void @burst.initialize(i8* (i8*)* nocapture %callback) local_unnamed_addr !ubaa. !0 {
entry:
  %0 = tail call i8* %callback(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @burst.string.bc77e56f72475bcb1ba0b4d16fff9cb4, i64 0, i64 0))
  store i8* %0, i8** bitcast (i8 (%Unity.Jobs.LowLevel.Unsafe.JobRanges*, i32, i32*, i32*)** @"Unity.Jobs.LowLevel.Unsafe.JobsUtility::GetWorkStealingRange_Ptr" to i8**), align 8
  ret void
}

define dllexport void @burst.initialize.externals(i8* (i8*)* nocapture %callback) local_unnamed_addr !ubaa. !0 {
entry:
  %0 = tail call i8* %callback(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @burst.string.bc77e56f72475bcb1ba0b4d16fff9cb4, i64 0, i64 0))
  store i8* %0, i8** bitcast (i8 (%Unity.Jobs.LowLevel.Unsafe.JobRanges*, i32, i32*, i32*)** @"Unity.Jobs.LowLevel.Unsafe.JobsUtility::GetWorkStealingRange_Ptr" to i8**), align 8
  ret void
}

; Function Attrs: norecurse readnone willreturn
define dllexport void @burst.initialize.statics() local_unnamed_addr #0 !ubaa. !2 {
entry:
  ret void
}

; Function Attrs: inaccessiblememonly nofree nosync nounwind willreturn
declare void @llvm.experimental.noalias.scope.decl(metadata) #1

; Function Attrs: nofree nosync nounwind readnone speculatable willreturn
declare { i32, i1 } @llvm.umul.with.overflow.i32(i32, i32) #2

attributes #0 = { norecurse readnone willreturn }
attributes #1 = { inaccessiblememonly nofree nosync nounwind willreturn }
attributes #2 = { nofree nosync nounwind readnone speculatable willreturn }

!ubaa.AudioAnalysis.Levels123.SterioToLMRSumJob = !{!0, !1, !1, !1, !1}
!ubaa.Unity.Collections.NativeArray\601\3CSystem.Single\3E = !{!1, !1, !0, !0, !0, !1, !0, !0, !0}
!ubaa.Unity.Collections.LowLevel.Unsafe.AtomicSafetyHandle = !{!1, !1, !1, !1}
!ubaa.Unity.Jobs.LowLevel.Unsafe.JobRanges = !{!0, !0, !0, !0, !0, !0, !0}
!burst.invariant = !{!2}

!0 = !{i1 false}
!1 = !{i1 true}
!2 = !{}
!3 = !{i1 false, i1 false, i1 false, i1 false, i1 false}
!4 = !{!5}
!5 = distinct !{!5, !6, !"AudioAnalysis.Levels123.SterioToLMRSumJob.Execute(AudioAnalysis.Levels123.SterioToLMRSumJob* this, int index) -> void_e4578475a84a7402f4d47a778f2d08c8: %this"}
!6 = distinct !{!6, !"AudioAnalysis.Levels123.SterioToLMRSumJob.Execute(AudioAnalysis.Levels123.SterioToLMRSumJob* this, int index) -> void_e4578475a84a7402f4d47a778f2d08c8"}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !8}